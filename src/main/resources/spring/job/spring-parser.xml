<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch   http://www.springframework.org/schema/batch/spring-batch-2.2.xsd   http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  ">

	<import resource="../config/spring-context.xml" />
	<import resource="../config/spring-datasource.xml" />

	<batch:job id="logParserJob">
		<batch:step id="parsing">
			<batch:tasklet>
				<batch:chunk reader="logItemReader" writer="jdbcItemWriter"
					commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<batch:job id="findBlockedIp">
		<batch:step id="querying">
			<batch:tasklet>
				<batch:chunk reader="jdbcItemReader" writer="jdbcBlockedIpItemWriter"
					commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="logItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['accesslog']}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="Date,IP,Request,Status,User Agent" />
						<property name="delimiter" value="|" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.ef.LogItemSetMapper" />
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="jdbcItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="select ip, count(id) as total from log 
		where request_date between '#{jobParameters['startDate']}' and '#{jobParameters['endDate']}'
		group by ip
		having count(id) > #{jobParameters['threshold']}" />
		<property name="rowMapper">
			<bean class="com.ef.BlockedIpMapper">
				<property name="jobParameters" value="#{jobParameters}" />
			</bean>
		</property>
	</bean>
	
	<bean id="jdbcBlockedIpItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="insert into BLOCKED_IP(IP, COMMENT) 
			values (:ip, :comment)"/>
		
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
	

	<bean id="jdbcItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="insert into log(REQUEST_DATE,IP,REQUEST,STATUS, USER_AGENT) 
			values (:date, :ip, :request, :status, :userAgent)"/>
		
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>


</beans>